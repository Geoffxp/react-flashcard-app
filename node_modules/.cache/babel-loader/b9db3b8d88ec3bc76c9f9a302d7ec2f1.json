{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Desktop\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ListDecks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { listDecks } from \"../utils/api/index\";\nimport DisplayDeck from \"./DisplayDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckList() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getDecks() {\n    try {\n      const response = await listDecks(signal);\n      setDecks(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  useEffect(() => {\n    getDecks();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.map(deck => /*#__PURE__*/_jsxDEV(DisplayDeck, {\n      deck: deck,\n      deckPage: false,\n      getDecks: getDecks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckList, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["C:/Users/geoff/Desktop/Project_Flashcards_Qualified_1/src/Layout/ListDecks.js"],"names":["React","useState","useEffect","listDecks","DisplayDeck","DeckList","decks","setDecks","abortController","AbortController","signal","getDecks","response","error","name","abort","map","deck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,QAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEA,iBAAeC,QAAf,GAA0B;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACO,MAAD,CAAhC;AACAH,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,KAHD,CAIA,OAAOC,KAAP,EAAc;AACV,UAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC7B,cAAMD,KAAN;AACH;AACJ;AACJ;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ;AAER,WAAO,MAAM;AACTH,MAAAA,eAAe,CAACO,KAAhB;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI;AAAA,cACKT,KAAK,CAACU,GAAN,CAAWC,IAAD,iBAAU,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAyB,MAAA,QAAQ,EAAE,KAAnC;AAA0C,MAAA,QAAQ,EAAEN;AAApD;AAAA;AAAA;AAAA;AAAA,YAApB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BuBN,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { listDecks } from \"../utils/api/index\"\r\nimport DisplayDeck from \"./DisplayDeck\"\r\n\r\nexport default function DeckList() {\r\n    const [decks, setDecks] = useState([]);\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    async function getDecks() {\r\n        try {\r\n            const response = await listDecks(signal);\r\n            setDecks(response);\r\n        }\r\n        catch (error) {\r\n            if (error.name !== \"AbortError\") {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDecks();\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {decks.map((deck) => <DisplayDeck deck={deck} deckPage={false} getDecks={getDecks} />)}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}