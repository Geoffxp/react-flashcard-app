{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\StudyCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport { listCards } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudyCards({\n  deck\n}) {\n  _s();\n\n  const [flip, setFlip] = useState(false);\n\n  const handleFlip = () => setFlip(val => val = !flip);\n\n  const {\n    url\n  } = useRouteMatch();\n  const [cards, setCards] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getCards() {\n    try {\n      const response = await listCards(deck.id, signal);\n      setCards(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  useEffect(() => {\n    getCards();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  let [currentIndex, setCurrentIndex] = useState(0);\n  const history = useHistory();\n\n  const next = () => setCurrentIndex(newVal => {\n    newVal = currentIndex + 1;\n\n    if (cards[newVal]) {\n      handleFlip();\n      return newVal;\n    } else {\n      const startAgain = window.confirm(\"Wanna start again? Pressing cancel will return you to the home screen.\");\n\n      if (startAgain) {\n        handleFlip();\n        return 0;\n      } else {\n        history.push(\"/\");\n        handleFlip();\n        return 0;\n      }\n    }\n  });\n\n  if (cards.length <= 2) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        page: url,\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Not enough cards.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You need at least 3 cards to study. There are \", cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"btn btn-primary mr-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn text-light\",\n            style: {\n              fontSize: \"15pt\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-plus mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), \"Add Cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (flip === false) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        page: url,\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [\"Card \", currentIndex + 1, \" of \", cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: cardTest[currentIndex].front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleFlip,\n              style: {\n                fontSize: \"15pt\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  paddingLeft: \"10px\",\n                  paddingRight: \"10px\",\n                  margin: \"5px\"\n                },\n                children: \"Flip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      page: url,\n      deck: deck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Study: \", deck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Card \", currentIndex + 1, \" of \", cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: cardTest[currentIndex].back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-2\",\n            onClick: handleFlip,\n            style: {\n              fontSize: \"15pt\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                paddingLeft: \"10px\",\n                paddingRight: \"10px\",\n                margin: \"5px\"\n              },\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: next,\n            style: {\n              fontSize: \"15pt\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                paddingLeft: \"10px\",\n                paddingRight: \"10px\",\n                margin: \"5px\"\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StudyCards, \"9d0oTUswf0dJ8aZi0LFNz4loWc8=\", false, function () {\n  return [useRouteMatch, useHistory];\n});\n\n_c = StudyCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCards\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/StudyCards.js"],"names":["React","useState","useEffect","useParams","useHistory","useRouteMatch","Breadcrumb","listCards","StudyCards","deck","flip","setFlip","handleFlip","val","url","cards","setCards","abortController","AbortController","signal","getCards","response","id","error","name","abort","currentIndex","setCurrentIndex","history","next","newVal","startAgain","window","confirm","push","length","fontSize","cardTest","front","paddingLeft","paddingRight","margin","back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from \"react\";\r\nimport { useParams, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport Breadcrumb from \"./Breadcrumb\"\r\nimport {listCards} from \"../utils/api/index\"\r\n\r\nexport default function StudyCards({ deck }){\r\n    const [flip, setFlip] = useState(false)\r\n    const handleFlip = () => setFlip((val) => val = !flip)\r\n    const { url } = useRouteMatch();\r\n    const [cards, setCards] = useState([]);\r\n    const abortController = new AbortController();\r\n\tconst signal = abortController.signal;\r\n\r\n    async function getCards() {\r\n            try {\r\n                const response = await listCards(deck.id, signal);\r\n                setCards(response);\r\n            }\r\n            catch(error) {\r\n                if(error.name !== \"AbortError\") {\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n\r\n    useEffect(() => {\r\n            getCards();\r\n\r\n            return () => {\r\n                abortController.abort();\r\n            };\r\n        }, []);\r\n    let [currentIndex, setCurrentIndex] = useState(0)\r\n    const history = useHistory();\r\n    const next = () => setCurrentIndex((newVal) => {\r\n      newVal = currentIndex + 1;\r\n      if(cards[newVal]){\r\n          handleFlip();\r\n          return newVal;\r\n      }\r\n      else{\r\n          const startAgain = window.confirm(\"Wanna start again? Pressing cancel will return you to the home screen.\")\r\n          if(startAgain){\r\n              handleFlip();\r\n              return 0;\r\n          }\r\n          else{\r\n              history.push(\"/\");\r\n              handleFlip();\r\n              return 0;\r\n          }\r\n      }\r\n  })\r\n    \r\n    if(cards.length <= 2){\r\n        return (\r\n            <>\r\n                <Breadcrumb page={url} deck={deck} />\r\n                <div>\r\n                    <h1>Not enough cards.</h1>\r\n                    <p>You need at least 3 cards to study. There are {cards.length}</p>\r\n                    <a href=\"#\" className=\"btn btn-primary mr-2\">\r\n                        <button className=\"btn text-light\" style={{fontSize: \"15pt\"}}>\r\n                            <i className=\"fa fa-plus mr-2\"></i>Add Cards\r\n                        </button>\r\n                    </a>\r\n                </div>\r\n            </>\r\n            \r\n        )\r\n    }\r\n    if(flip === false){\r\n        return (\r\n            <>\r\n                <Breadcrumb page={url} deck={deck} />\r\n                <h1>Study: {deck.name}</h1>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card {currentIndex+1} of {cards.length}</h5>\r\n                        <p className=\"card-text\">{cardTest[currentIndex].front}</p>\r\n                        <div>\r\n                            <button className=\"btn btn-secondary\" onClick={handleFlip} style={{fontSize: \"15pt\"}}>\r\n                                <p style={{paddingLeft: \"10px\", paddingRight: \"10px\", margin: \"5px\"}}>Flip</p>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumb page={url} deck={deck} />\r\n            <h1>Study: {deck.name}</h1>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Card {currentIndex+1} of {cards.length}</h5>\r\n                    <p className=\"card-text\">{cardTest[currentIndex].back}</p>\r\n                    <div>\r\n                        <button className=\"btn btn-secondary mr-2\" onClick={handleFlip} style={{fontSize: \"15pt\"}}>\r\n                        <p style={{paddingLeft: \"10px\", paddingRight: \"10px\", margin: \"5px\"}}>Flip</p>\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={next} style={{fontSize: \"15pt\"}}>\r\n                        <p style={{paddingLeft: \"10px\", paddingRight: \"10px\", margin: \"5px\"}}>Next</p>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}