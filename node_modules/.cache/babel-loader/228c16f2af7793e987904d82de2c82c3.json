{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ListDecks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport DisplayDeck from \"./DisplayDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckList({\n  decks\n}) {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getCards() {\n    try {\n      const response = await listCards(deck.id, signal);\n      setCards(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  useEffect(() => {\n    getCards();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.map(deck => /*#__PURE__*/_jsxDEV(DisplayDeck, {\n      deckId: deck.id,\n      deck: deck,\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckList, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n\n_c = DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/ListDecks.js"],"names":["React","DisplayDeck","DeckList","decks","cards","setCards","useState","abortController","AbortController","signal","getCards","response","listCards","deck","id","error","name","useEffect","abort","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACH,QAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEG,iBAAeC,QAAf,GAA0B;AAClB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACC,IAAI,CAACC,EAAN,EAAUL,MAAV,CAAhC;AACAJ,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,KAHD,CAIA,OAAMI,KAAN,EAAa;AACT,UAAGA,KAAK,CAACC,IAAN,KAAe,YAAlB,EAAgC;AAC5B,cAAMD,KAAN;AACH;AACJ;AACJ;;AAELE,EAAAA,SAAS,CAAC,MAAM;AACRP,IAAAA,QAAQ;AAER,WAAO,MAAM;AACTH,MAAAA,eAAe,CAACW,KAAhB;AACH,KAFD;AAGH,GANI,EAMF,EANE,CAAT;AAOA,sBACI;AAAA,cACKf,KAAK,CAACgB,GAAN,CAAWN,IAAD,iBAAU,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACC,EAA1B;AAA8B,MAAA,IAAI,EAAED,IAApC;AAA0C,MAAA,KAAK,EAAET;AAAjD;AAAA;AAAA;AAAA;AAAA,YAApB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BuBF,Q;;KAAAA,Q","sourcesContent":["import React from \"react\"\r\nimport DisplayDeck from \"./DisplayDeck\"\r\n\r\nexport default function DeckList({ decks }){\r\n    const [cards, setCards] = useState([]);\r\n    const abortController = new AbortController();\r\n\tconst signal = abortController.signal;\r\n\r\n    async function getCards() {\r\n            try {\r\n                const response = await listCards(deck.id, signal);\r\n                setCards(response);\r\n            }\r\n            catch(error) {\r\n                if(error.name !== \"AbortError\") {\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n\r\n    useEffect(() => {\r\n            getCards();\r\n\r\n            return () => {\r\n                abortController.abort();\r\n            };\r\n        }, []);\r\n    return (\r\n        <div>\r\n            {decks.map((deck) => <DisplayDeck deckId={deck.id} deck={deck} cards={cards}/>)}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}