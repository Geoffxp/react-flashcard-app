{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeck from \"./CreateDeck\";\nimport DisplayCard from \"./DisplayCard\";\nimport NewDeckForm from \"./NewDeckForm\";\nimport ListDecks from \"./ListDecks\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [flip, setFlip] = useState(false);\n\n  const handleFlip = () => setFlip(val => val = !flip);\n\n  let [currentIndex, setCurrentIndex] = useState(0);\n\n  const next = () => setCurrentIndex(newVal => {\n    newVal = currentIndex + 1;\n\n    if (cardList[newVal]) {\n      handleFlip();\n      return newVal;\n    } else {\n      const startAgain = window.confirm(\"Wanna start again? Pressing cancel will return you to the home screen.\");\n\n      if (startAgain) {\n        handleFlip();\n        return 0;\n      } else {\n        history.push(\"/\");\n        handleFlip();\n        return 0;\n      }\n    }\n  });\n\n  const decks = [{\n    \"id\": 1,\n    \"name\": \"Rendering in React\",\n    \"description\": \"Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Routes and stuff\",\n    \"description\": \"Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah \"\n  }];\n  const cards = [{\n    \"id\": 1,\n    \"deckId\": 1,\n    \"front\": \"????????????????????????????\",\n    \"back\": \"Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah \"\n  }, {\n    \"id\": 3,\n    \"deckId\": 1,\n    \"front\": \"????????????????????????????\",\n    \"back\": \"lah Blah lah lah Blah lah Blah lah lah Blah lah Blah lah Blah lah Blah lah \"\n  }, {\n    \"id\": 3,\n    \"deckId\": 1,\n    \"front\": \"????????????????????????????\",\n    \"back\": \"Blh Blh Bah Blh Blh Bla Blah Blh Bla Bla BlahBlah Bla BlahBlah Blah Blh \"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: [/*#__PURE__*/_jsxDEV(CreateDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListDecks, {\n            decks: decks,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(DisplayCard, {\n            flip: flip,\n            handleFlip: handleFlip,\n            currentIndex: currentIndex,\n            next: next,\n            cards: cards,\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: /*#__PURE__*/_jsxDEV(NewDeckForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"EZWKHtDWManSOCWietADWgHkWuo=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","Route","Switch","Header","NotFound","CreateDeck","DisplayCard","NewDeckForm","ListDecks","Breadcrumb","Layout","flip","setFlip","handleFlip","val","currentIndex","setCurrentIndex","next","newVal","cardList","startAgain","window","confirm","history","push","decks","cards"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeck from \"./CreateDeck\"\nimport DisplayCard from \"./DisplayCard\"\nimport NewDeckForm from \"./NewDeckForm\"\nimport ListDecks from \"./ListDecks\";\nimport Breadcrumb from \"./Breadcrumb\"\n\nfunction Layout() {\n  const [flip, setFlip] = useState(false)\n  const handleFlip = () => setFlip((val) => val = !flip)\n  let [currentIndex, setCurrentIndex] = useState(0)\n  const next = () => setCurrentIndex((newVal) => {\n    newVal = currentIndex + 1;\n    if(cardList[newVal]){\n        handleFlip();\n        return newVal;\n    }\n    else{\n        const startAgain = window.confirm(\"Wanna start again? Pressing cancel will return you to the home screen.\")\n        if(startAgain){\n            handleFlip();\n            return 0;\n        }\n        else{\n            history.push(\"/\");\n            handleFlip();\n            return 0;\n        }\n    }\n})\n\n  const decks = [{\n    \"id\": 1,\n    \"name\": \"Rendering in React\",\n    \"description\": \"Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah\",\n  },{\n    \"id\": 2,\n    \"name\": \"Routes and stuff\",\n    \"description\": \"Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah Yah \",\n  }]\n\n  const cards = [{\n    \"id\": 1,\n    \"deckId\": 1,\n    \"front\": \"????????????????????????????\",\n    \"back\": \"Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah Blah \",\n},\n{\n  \"id\": 3,\n  \"deckId\": 1,\n  \"front\": \"????????????????????????????\",\n  \"back\": \"lah Blah lah lah Blah lah Blah lah lah Blah lah Blah lah Blah lah Blah lah \",\n},\n{\n  \"id\": 3,\n  \"deckId\": 1,\n  \"front\": \"????????????????????????????\",\n  \"back\": \"Blh Blh Bah Blh Blh Bla Blah Blh Bla Bla BlahBlah Bla BlahBlah Blah Blh \",\n}]\n\n\n  return (\n    <>\n      <Header />\n      \n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <CreateDeck />\n            <ListDecks decks={decks} cards={cards}/>\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <DisplayCard \n              flip={flip} \n              handleFlip={handleFlip}\n              currentIndex={currentIndex}\n              next={next}\n              cards={cards}\n              decks={decks}/>\n          </Route>\n          <Route path=\"/decks/new\">\n            <NewDeckForm />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n        {/* TODO: Implement the screen starting here */}\n        \n        \n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}