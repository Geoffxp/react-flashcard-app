{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouteMatch, Switch, Route, useParams } from \"react-router-dom\";\nimport { listCards, readDeck } from \"../utils/api/index\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport DisplayDeck from \"./DisplayDeck\";\nimport CardList from \"./CardList\";\nimport StudyCards from \"./StudyCards\";\nimport CardRoutes from \"./Cards/CardRoutes\";\nimport EditDeck from \"./EditDeck\";\nimport EditCard from \"./EditCard\";\nimport NewDeckForm from \"./NewDeckForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Deck() {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getCards() {\n    try {\n      const response = await listCards(deckId, signal);\n      setCards(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  useEffect(() => {\n    getDeck();\n    getCards();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/new\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          page: \"Create Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NewDeckForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/decks/:deckId\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DisplayDeck, {\n          deck: deck,\n          cards: cards,\n          deckPage: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardList, {\n          cards: cards,\n          deck: deck,\n          setDeck: setDeck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/study\",\n        children: /*#__PURE__*/_jsxDEV(StudyCards, {\n          deck: deck,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/edit\",\n        children: /*#__PURE__*/_jsxDEV(EditDeck, {\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId/cards\",\n        children: /*#__PURE__*/_jsxDEV(CardRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Deck, \"OpN4GLSo05BUaTL+bCNgKs5fCuQ=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/Deck.js"],"names":["React","useState","useEffect","useRouteMatch","Switch","Route","useParams","listCards","readDeck","Breadcrumb","DisplayDeck","CardList","StudyCards","CardRoutes","EditDeck","EditCard","NewDeckForm","Deck","url","deckId","deck","setDeck","cards","setCards","abortController","AbortController","signal","getCards","response","error","name","getDeck","abort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch, Switch, Route, useParams } from \"react-router-dom\";\r\nimport { listCards, readDeck } from \"../utils/api/index\"\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport DisplayDeck from \"./DisplayDeck\"\r\nimport CardList from \"./CardList\"\r\nimport StudyCards from \"./StudyCards\"\r\nimport CardRoutes from \"./Cards/CardRoutes\"\r\nimport EditDeck from \"./EditDeck\"\r\nimport EditCard from \"./EditCard\"\r\nimport NewDeckForm from \"./NewDeckForm\";\r\n\r\nexport default function Deck() {\r\n    const { url } = useRouteMatch();\r\n    const { deckId } = useParams()\r\n    const [deck, setDeck] = useState({})\r\n    const [cards, setCards] = useState([]);\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    async function getCards() {\r\n        try {\r\n            const response = await listCards(deckId, signal);\r\n            setCards(response);\r\n        }\r\n        catch (error) {\r\n            if (error.name !== \"AbortError\") {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        getDeck();\r\n        getCards();\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/decks/new\">\r\n                        <Breadcrumb page=\"Create Deck\" />\r\n                        <NewDeckForm />\r\n                    </Route>\r\n                <Route exact={true} path=\"/decks/:deckId\">\r\n                    <Breadcrumb deck={deck} />\r\n                    <DisplayDeck deck={deck} cards={cards} deckPage={true} />\r\n                    <CardList cards={cards} deck={deck} setDeck={setDeck} />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId/study\">\r\n                    <StudyCards\r\n                        deck={deck} cards={cards} />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId/edit\">\r\n                    <EditDeck deck={deck} />\r\n                </Route>\r\n                <Route path=\"/decks/:deckId/cards\">\r\n                    <CardRoutes />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}