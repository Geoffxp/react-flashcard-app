{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Cards\\\\CardRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AddCard from \"../AddCard\";\nimport EditCard from \"../EditCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardRoutes() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getCards() {\n    try {\n      const response = await listCards(deckId, signal);\n      setCards(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  async function getDeck() {\n    if (deckId) {\n      console.log(deckId);\n      setDeck(await readDeck(deckId));\n    }\n  }\n\n  useEffect(() => {\n    getDeck();\n    getCards();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/decks/:deckId/cards/new\",\n      children: /*#__PURE__*/_jsxDEV(AddCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/decks/:deckId/cards/:cardId/edit\",\n      children: /*#__PURE__*/_jsxDEV(EditCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardRoutes, \"E69ru8AsiT5pnCkLuZAQr1DBl8c=\", true);\n\n_c = CardRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardRoutes\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/Cards/CardRoutes.js"],"names":["React","Switch","Route","AddCard","EditCard","CardRoutes","deckId","useParams","deck","setDeck","useState","cards","setCards","abortController","AbortController","signal","getCards","response","listCards","error","name","getDeck","console","log","readDeck","useEffect","abort"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAaC,SAAS,EAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMG,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,QAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEA,iBAAeC,QAAf,GAA0B;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,SAAS,CAACZ,MAAD,EAASS,MAAT,CAAhC;AACAH,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,KAHD,CAIA,OAAOE,KAAP,EAAc;AACV,UAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC7B,cAAMD,KAAN;AACH;AACJ;AACJ;;AAED,iBAAeE,OAAf,GAAyB;AACrB,QAAGf,MAAH,EAAU;AACNgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACAG,MAAAA,OAAO,CAAC,MAAMe,QAAQ,CAAClB,MAAD,CAAf,CAAP;AACH;AAEJ;;AAEDmB,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,OAAO;AACPL,IAAAA,QAAQ;AACR,WAAO,MAAM;AACTH,MAAAA,eAAe,CAACa,KAAhB;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,0BAAZ;AAAA,6BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,mCAAZ;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5CuBrB,U;;KAAAA,U","sourcesContent":["import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AddCard from \"../AddCard\"\r\nimport EditCard from \"../EditCard\"\r\n\r\nexport default function CardRoutes(){\r\n    const { deckId } = useParams()\r\n    const [deck, setDeck] = useState({})\r\n    const [cards, setCards] = useState([]);\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    async function getCards() {\r\n        try {\r\n            const response = await listCards(deckId, signal);\r\n            setCards(response);\r\n        }\r\n        catch (error) {\r\n            if (error.name !== \"AbortError\") {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function getDeck() {\r\n        if(deckId){\r\n            console.log(deckId)\r\n            setDeck(await readDeck(deckId))\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getDeck();\r\n        getCards();\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n    }, []);\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/decks/:deckId/cards/new\">\r\n                <AddCard />\r\n            </Route>\r\n            <Route path=\"/decks/:deckId/cards/:cardId/edit\">\r\n                <EditCard />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}