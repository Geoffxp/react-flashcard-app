{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ListDecks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { listDecks } from \"../utils/api/index\";\nimport DisplayDeck from \"./DisplayDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function deckList() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getDecks() {\n    try {\n      const response = await listDecks(signal);\n      setDecks(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  useEffect(() => {\n    getDecks();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.map(deck => /*#__PURE__*/_jsxDEV(DisplayDeck, {\n      deck: deck,\n      deckPage: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(deckList, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/ListDecks.js"],"names":["React","useState","useEffect","listDecks","DisplayDeck","deckList","decks","setDecks","abortController","AbortController","signal","getDecks","response","error","name","abort","map","deck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACH,QAAMO,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,QAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEG,iBAAeC,QAAf,GAA0B;AAClB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACO,MAAD,CAAhC;AACAH,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,KAHD,CAIA,OAAMC,KAAN,EAAa;AACT,UAAGA,KAAK,CAACC,IAAN,KAAe,YAAlB,EAAgC;AAC5B,cAAMD,KAAN;AACH;AACJ;AACJ;;AAELX,EAAAA,SAAS,CAAC,MAAM;AACRS,IAAAA,QAAQ;AAER,WAAO,MAAM;AACTH,MAAAA,eAAe,CAACO,KAAhB;AACH,KAFD;AAGH,GANI,EAMF,EANE,CAAT;AAOA,sBACI;AAAA,cACKT,KAAK,CAACU,GAAN,CAAWC,IAAD,iBAAU,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAyB,MAAA,QAAQ,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAApB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BuBZ,Q","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { listDecks } from \"../utils/api/index\"\r\nimport DisplayDeck from \"./DisplayDeck\"\r\n\r\nexport default function deckList(){\r\n    const [decks, setDecks] = useState([]);\r\n\tconst abortController = new AbortController();\r\n\tconst signal = abortController.signal;\r\n\r\n    async function getDecks() {\r\n            try {\r\n                const response = await listDecks(signal);\r\n                setDecks(response);\r\n            }\r\n            catch(error) {\r\n                if(error.name !== \"AbortError\") {\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n\r\n    useEffect(() => {\r\n            getDecks();\r\n\r\n            return () => {\r\n                abortController.abort();\r\n            };\r\n        }, []);\r\n    return (\r\n        <div>\r\n            {decks.map((deck) => <DisplayDeck deck={deck} deckPage={false} />)}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}