{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useParams } from \"react-router-dom\";\nimport { listDecks, listCards } from \"../utils/api/index.js\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeck from \"./CreateDeck\";\nimport NewDeckForm from \"./NewDeckForm\";\nimport ListDecks from \"./ListDecks\";\nimport Deck from \"./Deck\";\nimport Breadcrumb from \"./Breadcrumb.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n\n  async function getDecks() {\n    try {\n      const response = await listDecks(signal);\n      setDecks(response);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  }\n\n  useEffect(() => {\n    getDecks();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: [/*#__PURE__*/_jsxDEV(CreateDeck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListDecks, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/new\",\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NewDeckForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/\",\n          children: /*#__PURE__*/_jsxDEV(Deck, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Layout, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/geoff/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useEffect","useState","Route","Switch","useHistory","useParams","listDecks","listCards","Header","NotFound","CreateDeck","NewDeckForm","ListDecks","Deck","Breadcrumb","Layout","decks","setDecks","abortController","AbortController","signal","getDecks","response","error","name","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,kBAArD;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAoC,uBAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACD,QAAMiB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,QAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEC,iBAAeC,QAAf,GAA0B;AAC1B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMhB,SAAS,CAACc,MAAD,CAAhC;AACAH,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACA,KAHD,CAIA,OAAMC,KAAN,EAAa;AACZ,UAAGA,KAAK,CAACC,IAAN,KAAe,YAAlB,EAAgC;AAC/B,cAAMD,KAAN;AACA;AACD;AACD;;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AAChBqB,IAAAA,QAAQ;AAER,WAAO,MAAM;AACZH,MAAAA,eAAe,CAACO,KAAhB;AACA,KAFD;AAGA,GANS,EAMP,EANO,CAAT;AAYA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,EAAE,IAAvB;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAET;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAaE,QAAC,KAAD;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA6BD;;GA1DQD,M;;KAAAA,M;AA4DT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState }  from \"react\";\nimport { Route, Switch, useHistory, useParams } from \"react-router-dom\";\nimport { listDecks, listCards} from \"../utils/api/index.js\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeck from \"./CreateDeck\"\nimport NewDeckForm from \"./NewDeckForm\"\nimport ListDecks from \"./ListDecks\";\nimport Deck from \"./Deck\"\nimport Breadcrumb from \"./Breadcrumb.js\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n\tconst abortController = new AbortController();\n\tconst signal = abortController.signal;\n\n  async function getDecks() {\n\t\ttry {\n\t\t\tconst response = await listDecks(signal);\n\t\t\tsetDecks(response);\n\t\t}\n\t\tcatch(error) {\n\t\t\tif(error.name !== \"AbortError\") {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n  useEffect(() => {\n\t\tgetDecks();\n\n\t\treturn () => {\n\t\t\tabortController.abort();\n\t\t};\n\t}, []);\n\n\n\n\n\n  return (\n    <>\n      <Header />\n      \n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <CreateDeck />\n            <ListDecks decks={decks} />\n          </Route>\n          <Route path=\"/decks/new\">\n            <Breadcrumb />\n            <NewDeckForm />\n          </Route>\n          <Route path=\"/decks/:deckId/\">\n            <Deck decks={decks} />\n          </Route>\n          \n          <Route>\n            <NotFound />\n          </Route>\n          \n        </Switch>\n        {/* TODO: Implement the screen starting here */}\n        \n        \n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}